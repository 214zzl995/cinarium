// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.1.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import '../lib.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

class HomeVideo {
  final int id;
  final String name;
  final String title;
  final String releaseTime;
  final int duration;
  final double thumbnailRatio;
  final Metadata matedata;

  const HomeVideo({
    required this.id,
    required this.name,
    required this.title,
    required this.releaseTime,
    required this.duration,
    required this.thumbnailRatio,
    required this.matedata,
  });

  @override
  int get hashCode =>
      id.hashCode ^
      name.hashCode ^
      title.hashCode ^
      releaseTime.hashCode ^
      duration.hashCode ^
      thumbnailRatio.hashCode ^
      matedata.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is HomeVideo &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          name == other.name &&
          title == other.title &&
          releaseTime == other.releaseTime &&
          duration == other.duration &&
          thumbnailRatio == other.thumbnailRatio &&
          matedata == other.matedata;
}

class Metadata {
  final String hash;
  final String filename;
  final PathBuf path;
  final BigInt size;
  final String extension_;

  const Metadata({
    required this.hash,
    required this.filename,
    required this.path,
    required this.size,
    required this.extension_,
  });

  @override
  int get hashCode =>
      hash.hashCode ^
      filename.hashCode ^
      path.hashCode ^
      size.hashCode ^
      extension_.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Metadata &&
          runtimeType == other.runtimeType &&
          hash == other.hash &&
          filename == other.filename &&
          path == other.path &&
          size == other.size &&
          extension_ == other.extension_;
}

class UntreatedVideo {
  final int id;
  final String crawlName;
  final bool isHidden;
  final Metadata matedata;

  const UntreatedVideo({
    required this.id,
    required this.crawlName,
    required this.isHidden,
    required this.matedata,
  });

  @override
  int get hashCode =>
      id.hashCode ^ crawlName.hashCode ^ isHidden.hashCode ^ matedata.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is UntreatedVideo &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          crawlName == other.crawlName &&
          isHidden == other.isHidden &&
          matedata == other.matedata;
}
